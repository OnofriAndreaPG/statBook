{
    "collab_server" : "",
    "contents" : "\"logiGrowth.1\" <-\nfunction(fixed = c(NA, NA, NA), names = c(\"a\", \"b\", \"c\"))\n{\n    ## Checking arguments\n    numParm <- 3\n    if (!is.character(names) | !(length(names) == numParm)) {stop(\"Not correct 'names' argument\")}\n    if (!(length(fixed) == numParm)) {stop(\"Not correct 'fixed' argument\")}\n\n    ## Fixing parameters (using argument 'fixed')\n    notFixed <- is.na(fixed)\n    parmVec <- rep(0, numParm)\n    parmVec[!notFixed] <- fixed[!notFixed]\n\n    ## Defining the non-linear function\n    fct <- function(x, parm)\n    {\n        parmMat <- matrix(parmVec, nrow(parm), numParm, byrow = TRUE)\n        parmMat[, notFixed] <- parm\n\n        a <- parmMat[, 1]; b <- parmMat[, 3]; c <- parmMat[, 2]\n        a / (1 + exp(- b * x + c))\n    }\n\n    ## Defining self starter function\n    ssfct <- function(dataf)\n    {\n        x <- dataf[, 1]\n        y <- dataf[, 2]\n\n        a <- max(y) * 1.05\n\n        ## Linear regression on pseudo y values\n        pseudoY <- log( (a / y ) - 1 )\n        coefs <- coef( lm(pseudoY ~ x) )\n        b <- - coefs[2]\n        c <- coefs[1]\n\n        return(c(a, b, c)[notFixed])\n    }\n\n    ## Defining names\n    pnames <- names[notFixed]\n\n    ## Defining derivatives\n\n    ## Defining the ED function\n\n    ## Defining the inverse function\n\n    ## Defining descriptive text\n    text <- \"Logistic Growth Model - 1\"\n\n    ## Returning the function with self starter and names\n    returnList <- list(fct = fct, ssfct = ssfct, names = pnames, text = text, noParm = sum(is.na(fixed)))\n\n    class(returnList) <- \"drcMean\"\n    invisible(returnList)\n}\n\n\"logiGrowth.2\" <-\nfunction(fixed = c(NA, NA, NA), names = c(\"a\", \"b\", \"c\"))\n{\n    ## Checking arguments\n    numParm <- 3\n    if (!is.character(names) | !(length(names) == numParm)) {stop(\"Not correct 'names' argument\")}\n    if (!(length(fixed) == numParm)) {stop(\"Not correct 'fixed' argument\")}\n\n    ## Fixing parameters (using argument 'fixed')\n    notFixed <- is.na(fixed)\n    parmVec <- rep(0, numParm)\n    parmVec[!notFixed] <- fixed[!notFixed]\n\n    ## Defining the non-linear function\n    fct <- function(x, parm)\n    {\n        parmMat <- matrix(parmVec, nrow(parm), numParm, byrow = TRUE)\n        parmMat[, notFixed] <- parm\n\n        a <- parmMat[, 1]; b <- parmMat[, 3]; c <- parmMat[, 2]\n        a / (1 + b * exp(- c * x))\n    }\n\n    ## Defining self starter function\n    ssfct <- function(dataf)\n    {\n        x <- dataf[, 1]\n        y <- dataf[, 2]\n\n        a <- max(y) * 1.05\n\n        ## Linear regression on pseudo y values\n        pseudoY <- log( (a / y ) - 1 )\n        coefs <- coef( lm(pseudoY ~ x) )\n        c <- - coefs[2]\n        b <- exp(coefs[1])\n\n        return(c(a, b, c)[notFixed])\n    }\n\n    ## Defining names\n    pnames <- names[notFixed]\n\n    ## Defining derivatives\n\n    ## Defining the ED function\n\n    ## Defining the inverse function\n\n    ## Defining descriptive text\n    text <- \"Logistic Growth Model - 2\"\n\n    ## Returning the function with self starter and names\n    returnList <- list(fct = fct, ssfct = ssfct, names = pnames, text = text, noParm = sum(is.na(fixed)))\n\n    class(returnList) <- \"drcMean\"\n    invisible(returnList)\n}\n\n\"logiGrowth.3\" <-\nfunction(fixed = c(NA, NA, NA), names = c(\"init\", \"m\", \"plateau\"))\n{\n    ## Checking arguments\n    numParm <- 3\n    if (!is.character(names) | !(length(names) == numParm)) {stop(\"Not correct 'names' argument\")}\n    if (!(length(fixed) == numParm)) {stop(\"Not correct 'fixed' argument\")}\n\n    ## Fixing parameters (using argument 'fixed')\n    notFixed <- is.na(fixed)\n    parmVec <- rep(0, numParm)\n    parmVec[!notFixed] <- fixed[!notFixed]\n\n    ## Defining the non-linear function\n    fct <- function(x, parm)\n    {\n        parmMat <- matrix(parmVec, nrow(parm), numParm, byrow = TRUE)\n        parmMat[, notFixed] <- parm\n\n        W0 <- parmMat[, 1]; Wf <- parmMat[, 3]; m <- parmMat[, 2]\n        W0 * Wf / (W0 + (Wf - W0) * exp( - m * x))\n    }\n\n    ## Defining self starter function\n    ssfct <- function(dataf)\n    {\n        x <- dataf[, 1]\n        y <- dataf[, 2]\n\n        plateau <- max(y) * 1.05\n\n        ## Linear regression on pseudo y values\n        pseudoY <- log( (plateau / (y + 0.0001) ) - 1 )\n        coefs <- coef( lm(pseudoY ~ x) )\n        b <- exp(coefs[1])\n        init <- plateau / (1 + b)\n        m <- - coefs[2]\n\n        return(c(init, m, plateau)[notFixed])\n    }\n\n    ## Defining names\n    pnames <- names[notFixed]\n\n    ## Defining derivatives\n\n    ## Defining the ED function\n\n    ## Defining the inverse function\n\n    ## Defining descriptive text\n    text <- \"Logistic Growth Model - 3\"\n\n    ## Returning the function with self starter and names\n    returnList <- list(fct = fct, ssfct = ssfct, names = pnames, text = text, noParm = sum(is.na(fixed)))\n\n    class(returnList) <- \"drcMean\"\n    invisible(returnList)\n}\n\n\"logiGrowth.4\" <-\nfunction(fixed = c(NA, NA, NA), names = c(\"m\", \"plateau\", \"t50\"))\n{\n    ## Checking arguments\n    numParm <- 3\n    if (!is.character(names) | !(length(names) == numParm)) {stop(\"Not correct 'names' argument\")}\n    if (!(length(fixed) == numParm)) {stop(\"Not correct 'fixed' argument\")}\n\n    ## Fixing parameters (using argument 'fixed')\n    notFixed <- is.na(fixed)\n    parmVec <- rep(0, numParm)\n    parmVec[!notFixed] <- fixed[!notFixed]\n\n    ## Defining the non-linear function\n    fct <- function(x, parm)\n    {\n        parmMat <- matrix(parmVec, nrow(parm), numParm, byrow = TRUE)\n        parmMat[, notFixed] <- parm\n\n        m <- parmMat[, 1]; plateau <- parmMat[, 2]; t50 <- parmMat[, 3]\n        plateau / (1 + exp(- m * (x - t50)))\n    }\n\n    ## Defining self starter function\n    ssfct <- function(dataf)\n    {\n        x <- dataf[, 1]\n        y <- dataf[, 2]\n\n        plateau <- max(y) * 1.05\n\n        ## Linear regression on pseudo y values\n        pseudoY <- log( (plateau / (y + 0.0001) ) - 1 )\n        coefs <- coef( lm(pseudoY ~ x) )\n        m <- - coefs[2]\n        t50 <- coefs[1] / m\n\n        return(c(m, plateau, t50)[notFixed])\n    }\n\n    ## Defining names\n    pnames <- names[notFixed]\n\n    ## Defining derivatives\n\n    ## Defining the ED function\n\n    ## Defining the inverse function\n\n    ## Defining descriptive text\n    text <- \"Logistic Growth Model - 4\"\n\n    ## Returning the function with self starter and names\n    returnList <- list(fct = fct, ssfct = ssfct, names = pnames, text = text, noParm = sum(is.na(fixed)))\n\n    class(returnList) <- \"drcMean\"\n    invisible(returnList)\n}\n\n",
    "created" : 1519310096764.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "501252065",
    "id" : "CB49456E",
    "lastKnownWriteTime" : 1519310253,
    "last_content_update" : 1519310253784,
    "path" : "~/Documents/_DBXAndrea/Dropbox/_Lavoro/MyUtilities/RPackages/statBook/R/logiGrowth.R",
    "project_path" : "R/logiGrowth.R",
    "properties" : {
        "docOutlineVisible" : "1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}